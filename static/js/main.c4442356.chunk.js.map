{"version":3,"sources":["component/HeaderComponent.js","component/FooterComponent.js","component/LoadingComponent.js","shared/baseUrl.js","component/HomeComponent.js","component/MenuComponent.js","component/ContactComponent.js","component/DishDetailComponent.js","component/AboutComponent.js","redux/ActionTypes.js","redux/ActionCreaters.js","component/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Header","props","toggleNav","bind","state","isNavOpen","isModalOpen","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","className","onClick","href","src","height","width","alt","isOpen","navbar","to","outline","toggle","onSubmit","htmlFor","type","id","name","innerRef","input","check","color","Component","Footer","Loading","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","image","designation","description","Home","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","Menu","menu","dishes","map","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","console","log","JSON","stringify","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","role","model","md","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","CommentForm","postComment","dishId","rating","author","comments","aria-hidden","RenderDish","top","RenderComments","dishComments","commentt","com","comment","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","RenderLeaders","tag","left","middle","object","body","Heading","Children","About","leaders","title","list","ADD_COMMENT","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","ADD_COMMENTS","COMMENTS_FAILED","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","LEADERS_LOADING","ADD_LEADERS","LEADERS_FAILED","addComment","ActionTypes","payload","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","classNames","timeout","path","component","filter","featured","promotions","promo","l","exact","resetFeedbackForm","match","parseInt","params","commentsErrMess","location","key","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","comm","catch","newFeedback","telum","resetFedbackForm","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4442356.chunk.js","sourcesContent":["import { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, \r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport React, {Component} from 'react';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.state = {\r\n          isNavOpen: false,\r\n          isModalOpen : false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n    \r\n    toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen : !this.state.isModalOpen\r\n        })\r\n    }\r\n\r\n    handleLogin(event){\r\n        this.toggleModal();\r\n        alert(this.username.value + ' ' + this.password.value + ' '+ this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='../images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className = \"ml-auto navbar\">\r\n                                <NavItem>\r\n                                    <Button outline onClick = {this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span>Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen = {this.state.isModalOpen} toggle = {this.toggleModal}>\r\n                    <ModalHeader toggle = {this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit = {this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor = \"username\">Username</Label>\r\n                                <Input type = \"text\" id=  \"username\" name = \"username\" \r\n                                    innerRef = {(input)=>this.username = input}/>\r\n        \r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props){\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to = '/home'>Home</Link></li>\r\n                            <li><Link to = '/aboutus'>About us</Link></li>\r\n                            <li><Link to = '/menu'>Menu</Link></li>\r\n                            <li><Link to = '/contactus'>Contact</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                            confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Footer;","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';\r\n","import React from 'react';\r\nimport {Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport {FadeTransform} from 'react-animation-components';\r\n\r\nfunction RenderCard({item,isLoading,errMess}){\r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <FadeTransform in\r\n                transformProps={{\r\n                    exitTransform : 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Home(props){\r\n    return(\r\n\r\n        <div className = \"container\">\r\n            <div className = \"row align-items-start\">\r\n                <div className = \"col-12 col-md m-1\">\r\n                <RenderCard item={props.dish} \r\n                            isLoading={props.dishesLoading} \r\n                            errMess={props.dishesErrMess}  />\r\n\r\n                </div>\r\n                <div className = \"col-12 col-md m-1\">\r\n                    <RenderCard item = {props.promotion}\r\n                                isLoading={props.promoLoading} \r\n                                errMess={props.promoErrMess}/>\r\n                    \r\n                </div>\r\n                <div className = \"col-12 col-md m-1\">\r\n                    <RenderCard item = {props.leader}\r\n                                isLoading = {props.leadersLoading}  \r\n                                errMess={props.leadersErrMess}/>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Home;","import React from 'react';\r\nimport { Card,CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem({dish}){\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props)=>{\r\n\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n          <div  className=\"col-12 col-md-5 m-1\">\r\n            <RenderMenuItem dish = {dish}/>\r\n          </div>\r\n        );\r\n    });\r\n    if (props.dishes.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\"> \r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }else{\r\n    //console.log(\"Menu Component render is invoked\");\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n       \r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport {Breadcrumb ,BreadcrumbItem, Button,Row, Label, Col} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Control, Form, Errors,actions} from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        // this.state = {\r\n        //      firstname : '',\r\n        //      lastname : '',\r\n        //      telnum : '',\r\n        //      email : '',\r\n        //      agree : false,\r\n        //      contactType : 'Tel.',\r\n        //      message : '',\r\n        //      touched:{\r\n        //          firstname  : false,\r\n        //          lastname : false,\r\n        //          telnum : false,\r\n        //          email : false\r\n        //      }\r\n        // }\r\n        // this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        // this.handleBlur = this.handleBlur.bind(this);\r\n    \r\n    }\r\n    \r\n    // handleInputChange(event){\r\n    //     const target = event.target;\r\n    //     const value = target.type == \"checkbox\" ? target.checked : target.value;\r\n    //     const name = target.name;\r\n    //     this.setState({\r\n    //         [name] : value\r\n    //     })\r\n    // }\r\n\r\n    // handleSubmit(event){\r\n    //     alert('Current State is : ' + JSON.stringify(this.state));\r\n    //     event.preventDefault();\r\n    // }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        //alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname,values.lastname,values.telnum,values.email, values.agree,values.contactType,values.message);\r\n        // event.preventDefault();\r\n    }\r\n\r\n\r\n    // handleBlur = (field) => (evt) => {\r\n    //     this.setState({\r\n    //         touched:{\r\n    //             ...this.state.touched,\r\n    //             [field] : true\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    // validate(firstname,lastname,telnum,email){\r\n    //     const errors = {\r\n    //         firstname: '',\r\n    //         lastname: '',\r\n    //         telnum: '',\r\n    //         email: ''\r\n    //     };\r\n    //     if (this.state.touched.firstname && firstname.length < 3)\r\n    //         errors.firstname = 'First Name should be >= 3 characters';\r\n    //     else if (this.state.touched.firstname && firstname.length > 10)\r\n    //         errors.firstname = 'First Name should be <= 10 characters';\r\n\r\n    //     if (this.state.touched.lastname && lastname.length < 3)\r\n    //         errors.lastname = 'Last Name should be >= 3 characters';\r\n    //     else if (this.state.touched.lastname && lastname.length > 10)\r\n    //         errors.lastname = 'Last Name should be <= 10 characters';\r\n\r\n    //     const reg = /^\\d+$/;\r\n    //     if (this.state.touched.telnum && !reg.test(telnum))\r\n    //         errors.telnum = 'Tel. Number should contain only numbers';\r\n\r\n    //     if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n    //         errors.email = 'Email should contain a @';\r\n\r\n    //     return errors;\r\n    // }\r\n\r\n    render(){\r\n\r\n        //const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className = \"row row-content\">\r\n                    <div className = \"col-12\">\r\n                        <h3>Send Your Feedback</h3>\r\n                    </div>\r\n                    <div className = \"col-12 col-md-9\">\r\n                        {/* <Form onSubmit = {this.handleSubmit}>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        value={this.state.firstname}\r\n                                        valid={errors.firstname === ''}\r\n                                        invalid={errors.firstname !== ''}\r\n                                        onBlur={this.handleBlur('firstname')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.firstname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        value={this.state.lastname}\r\n                                        valid={errors.lastname === ''}\r\n                                        invalid={errors.lastname !== ''}\r\n                                        onBlur={this.handleBlur('lastname')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.lastname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"tel\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        value={this.state.telnum}\r\n                                        valid={errors.telnum === ''}\r\n                                        invalid={errors.telnum !== ''}\r\n                                        onBlur={this.handleBlur('telnum')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.telnum}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email}\r\n                                        valid={errors.email === ''}\r\n                                        invalid={errors.email !== ''}\r\n                                        onBlur={this.handleBlur('email')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.email}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md = {{size : 6, offset : 2}}>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input type = \"checkbox\" name = \"agree\" checked = {this.state.agree} onChange = {this.handleInputChange}/>{' '}<strong> May We Contact You ?</strong>\r\n\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md = {{size : 3, offset :1}}>\r\n                                    <Input type = \"select\" name = \"contactType\" value = {this.state.contactType} onChange = {this.handleInputChange}>\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md = {{size : 10, offset:2}}>\r\n                                    <Button type = \"submit\" color = \"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Form> */}\r\n\r\n                        <Form model = \"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators = {{\r\n                                            required,\r\n                                            minLength : minLength(3),\r\n                                            maxLength : maxLength(15)\r\n                                        }}\r\n                                        />\r\n                                        <Errors\r\n                                            className = \"text-danger\"\r\n                                            model = \".firstname\"\r\n                                            show = \"touched\"\r\n                                            messages={{\r\n                                                required : 'Required',\r\n                                                minLength : 'Must be > 2 characters',\r\n                                                maxLength : 'Must be < 15 character'\r\n                                            }}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators = {{\r\n                                            required,\r\n                                            minLength : minLength(3),\r\n                                            maxLength : maxLength(15)\r\n                                        }}\r\n                                        />\r\n                                        <Errors\r\n                                            className = \"text-danger\"\r\n                                            model = \".lastname\"\r\n                                            show = \"touched\"\r\n                                            messages={{\r\n                                                required : 'Required',\r\n                                                minLength : 'Must be > 2 characters',\r\n                                                maxLength : 'Must be < 15 character'\r\n                                                \r\n                                            }}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators = {{\r\n                                            required,\r\n                                            minLength : minLength(3),\r\n                                            maxLength : maxLength(15),\r\n                                            isNumber\r\n                                        }}\r\n                                         />\r\n                                        <Errors\r\n                                            className = \"text-danger\"\r\n                                            model = \".telnum\"\r\n                                            show = \"touched\"\r\n                                            messages={{\r\n                                                required : 'Required',\r\n                                                minLength : 'Must be > 2 numbers',\r\n                                                maxLength : 'Must be < 15 numbers',\r\n                                                isNumber : 'Must be a number'\r\n                                            }}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\" \r\n                                        validators = {{\r\n                                            required,\r\n                                            validEmail\r\n                                        }}\r\n                                         />\r\n                                        <Errors\r\n                                            className = \"text-danger\"\r\n                                            model = \".email\"\r\n                                            show = \"touched\"\r\n                                            messages={{\r\n                                                required : 'Required',\r\n                                                validEmail : 'Invalid Email Address'\r\n                                            }}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React,{Component} from 'react';\r\nimport { Card,CardImg,CardBody, CardTitle,CardText,Breadcrumb,BreadcrumbItem} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {  \r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Row, Label, Col} from 'reactstrap';\r\nimport {Control, LocalForm, Errors} from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport {FadeTransform, Fade, Stagger} from 'react-animation-components'\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\n\r\nclass CommentForm extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             isModalOpen : false\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen : !this.state.isModalOpen\r\n        })\r\n    }\r\n\r\n    handleSubmit(values){\r\n        this.toggleModal();\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comments);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <Button outline onClick = {this.toggleModal}><i className=\"fa fa-pencil\" aria-hidden=\"true\"></i> Submit Comment</Button>\r\n                <Modal isOpen = {this.state.isModalOpen} toggle = {this.toggleModal}>\r\n                    <ModalHeader toggle = {this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit = {this.handleSubmit}>\r\n                            <Row className = \"form-group\">\r\n                                <Label htmlFor=\"lastnamratinge\" md={5}>Rating</Label>\r\n                                <Col className = \"col-12\">\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className= \"form-group\">\r\n                                <Label htmlFor=\"author\" md={5}>Your Name</Label>\r\n                                <Col md = {12}>\r\n                                    <Control.text model = \".author\" \r\n                                                  id = \"author\" \r\n                                                  name =\"author\" \r\n                                                  placeholder=\"Your Name\"\r\n                                                  className = \"form-control\"\r\n                                                  validators = {{\r\n                                                      required,\r\n                                                      minLength : minLength(3),\r\n                                                      maxLength : maxLength(15)\r\n                                                  }}></Control.text>\r\n                                                  <Errors\r\n                                                    className = \"text-danger\"\r\n                                                    model = \".author\"\r\n                                                    show = \"touched\"\r\n                                                    messages={{\r\n                                                        required : 'Required',\r\n                                                        minLength : 'Must greater than 2 characters',\r\n                                                        maxLength : 'Must Less than 15 characters'\r\n                                                   }}/>\r\n\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className = \"form-group\">\r\n                                <Label htmlFor = \"comments\" md = {5}>Comments </Label>\r\n                                <Col md = {12}>\r\n                                    <Control.textarea model = \".comments\"\r\n                                                      rows = \"6\"\r\n                                                      id = \"comments\"\r\n                                                      name = \"comments\"\r\n                                                      className = \"form-control\"></Control.textarea>\r\n                                </Col>\r\n                            </Row>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n    function RenderDish({dish}) {\r\n        if (dish != null)\r\n            return(\r\n                <div  className=\"col-12 col-md-5 m-1\">\r\n                    <FadeTransform in\r\n                    transformProps={{\r\n                        exitTransform : 'scale(0.5) translateY(-50%)'\r\n                    }}>\r\n                        <Card>\r\n                            <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                            <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </FadeTransform>\r\n                </div>\r\n            );\r\n        else{\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n    function RenderComments({dishComments,postComment,dishId}){\r\n        if(dishComments != null){\r\n            const commentt = dishComments.map(com=>{\r\n                return(\r\n                    <Fade in>\r\n                        <li key = {com.id}>\r\n                            <p>{com.comment}</p>\r\n                            <p>-- {com.author}  {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(com.date)))}</p>\r\n                        </li>\r\n                    </Fade>\r\n                );\r\n            });\r\n            return(\r\n                <div  className=\"col-12 col-md-5 m-1\">\r\n                    <h4> Comments </h4>\r\n                    <ul className = \"list-unstyled\">\r\n                        <Stagger in>\r\n                        {commentt}\r\n                        </Stagger>\r\n                    </ul>\r\n                    <CommentForm dishId={dishId} postComment={postComment} />\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return <div></div>;\r\n        }\r\n    }\r\n    const DishDetail = (props) => {\r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dish == null) {\r\n            return (<div></div>);\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n\r\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>{props.dish.name}</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row\">\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments dishComments={props.comments}\r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id}/>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default DishDetail;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport {Loading} from './LoadingComponent';\r\nimport {Fade, Stagger} from 'react-animation-components'\r\n\r\nfunction RenderLeaders({leader,isLoading,errMess}){\r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    return(\r\n        \r\n        <div className = \"container\" className = \"mt-3\">\r\n            <Fade in>\r\n                <Media tag = \"li\" >\r\n                    <Media left middle>\r\n                        <Media object src = {baseUrl + leader.image}></Media>\r\n                    </Media>\r\n                    <Media body className = \"ml-5\">\r\n                        <Media Heading><h2>{leader.name}</h2></Media>\r\n                        <Media Children className = \"mb-3\">{leader.designation}</Media>\r\n                        <p>{leader.description}</p>\r\n                    </Media>\r\n                </Media>\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.map((leader) => {\r\n        return (\r\n            <div key = {leader.id}>\r\n                <Stagger in>\r\n                <RenderLeaders leader = {leader}\r\n                                isLoading = {props.leadersLoading}\r\n                                errMess = {props.leadersErrMess}/>\r\n                                </Stagger>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        {leaders}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\n\r\n\r\n","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId : dishId,\r\n        rating : rating,\r\n        author : author,\r\n        comment : comment\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n    return fetch(baseUrl + 'comments',{\r\n                method : 'POST',\r\n                body : JSON.stringify(newComment),\r\n                headers : {\r\n                    'Content-Type' : 'application/json'\r\n                }, \r\n                credentials : 'same-origin'\r\n            }).then(response => {\r\n                    if(response.ok)\r\n                        return response;\r\n                    \r\n                    else{\r\n                        var error = new Error('Error ' + response.status + ' : ' + response.statusText);\r\n                        error.response = response;\r\n                        throw error;\r\n                    }\r\n                },\r\n                error =>{\r\n                    var errmess = new Error(error.message);\r\n                    throw errmess;\r\n                }\r\n            )\r\n            .then (response => response.json())\r\n            .then(comm => dispatch(addComment(comm)))\r\n            .catch(error => {console.log('Post comments', error.message)\r\n            alert('Your comment could not be posted\\nError : ' + error.message)});\r\n\r\n}\r\n\r\nexport const postFeedback = (firstname,lastname,telnum,email,agree,contactType,message) => (dispatch) =>{\r\n\r\n        const newFeedback = {\r\n            firstname : firstname,\r\n            lastname : lastname,\r\n            telum : telnum,\r\n            email : email,\r\n            agree : agree,\r\n            contactType : contactType,\r\n            message : message\r\n        }\r\n        newFeedback.date = new Date().toISOString();\r\n        return fetch(baseUrl + 'feedback' ,{ \r\n            method : 'POST',\r\n                body : JSON.stringify(newFeedback),\r\n                headers : {\r\n                    'Content-Type' : 'application/json'\r\n                }, \r\n                credentials : 'same-origin'\r\n            })\r\n            .then(\r\n                response => {\r\n                    if(response.ok)\r\n                        return response;\r\n                    \r\n                    else{\r\n                        var error = new Error('Error ' + response.status + ' : ' + response.statusText);\r\n                        error.response = response;\r\n                        throw error;\r\n                    }\r\n                },\r\n                error =>{\r\n                    var errmess = new Error(error.message);\r\n                    throw errmess;\r\n                }\r\n            )\r\n            .then(response => response.json())\r\n            .then(response => alert(\"Thanx For Your Feedback : \"+JSON.stringify(response)))\r\n            .catch(error => {console.log('Post Feedback', error.message)\r\n            alert('Your feedback could not be posted\\nError : ' + error.message)})\r\n\r\n}\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n            .then(response => {\r\n                if(response.ok)\r\n                    return response;\r\n                \r\n                else{\r\n                    var error = new Error('Error ' + response.status + ' : ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n                error =>{\r\n                    var errmess = new Error(error.message);\r\n                    throw errmess;\r\n                }\r\n            )\r\n            .then(response => response.json())\r\n            .then(dishes => dispatch(addDishes(dishes)))\r\n            .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n\r\n    return fetch(baseUrl + 'comments')\r\n            .then(response => {\r\n                if(response.ok)\r\n                    return response;\r\n                \r\n                else{\r\n                    var error = new Error('Error ' + response.status + ' : ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n                error =>{\r\n                    var errmess = new Error(error.message);\r\n                    throw errmess;\r\n                }\r\n            )\r\n            .then (response => response.json())\r\n            .then (comments => dispatch(addComments(comments)))\r\n            .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n            .then(response => {\r\n                if(response.ok)\r\n                    return response;\r\n                \r\n                else{\r\n                    var error = new Error('Error ' + response.status + ' : ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n                error =>{\r\n                    var errmess = new Error(error.message);\r\n                    throw errmess;\r\n                }\r\n            )\r\n            \r\n            .then (response => response.json())\r\n            .then (promos => dispatch(addPromos(promos)))\r\n            .catch(error => dispatch(promosFailed(error.message)));\r\n\r\n}\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n            .then(response => {\r\n                if(response.ok)\r\n                    return response;\r\n                \r\n                else{\r\n                    var error = new Error('Error ' + response.status + ' : ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n                error =>{\r\n                    var errmess = new Error(error.message);\r\n                    throw errmess;\r\n                }\r\n            )\r\n            \r\n            .then (response => response.json())\r\n            .then (leaders => dispatch(addLeaders(leaders)))\r\n            .catch(error => dispatch(leadersFailed(error.message)));\r\n\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING,\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING,\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});","import React, { Component } from 'react';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishDetailComponent';\r\nimport About from './AboutComponent';\r\nimport {connect} from 'react-redux';\r\nimport {Switch, Route,Redirect,withRouter} from 'react-router-dom';\r\nimport { postComment,fetchDishes,fetchPromos,fetchComments,fetchLeaders,postFeedback} from '../redux/ActionCreaters';\r\nimport {actions} from \"react-redux-form\";\r\nimport {TransitionGroup,CSSTransition} from 'react-transition-group'\r\n\r\nconst mapStateToProps = state =>{\r\n  return{\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  \r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback: (firstname,lastname,telnum,email,agree,contactType,message) => dispatch(postFeedback(firstname,lastname,telnum,email,agree,contactType,message)),\r\n  fetchDishes: () => {dispatch(fetchDishes())},\r\n  resetFedbackForm : ()=>{dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders())\r\n\r\n});\r\n\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n    \r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n    const HomePage = ()=>{\r\n      return(\r\n        <Home dish = {this.props.dishes.dishes.filter((dish)=>dish.featured)[0]}\r\n              promotion = {this.props.promotions.promotions.filter((promo)=>promo.featured)[0]}\r\n              leader = {this.props.leaders.leaders.filter((l)=>l.featured)[0]}\r\n              leadersLoading = {this.props.leaders.isLoading}\r\n              leadersErrMess = {this.props.leaders.errMess}\r\n              dishesLoading = {this.props.dishes.isLoading}\r\n              dishesErrMess={this.props.dishes.errMess}\r\n              promoLoading = {this.props.promotions.isLoading}\r\n              promoErrMess ={this.props.promotions.errMess}\r\n        />\r\n      )\r\n    };\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \r\n            isLoading = {this.props.dishes.isLoading}\r\n            errMess={this.props.dishes.errMess}\r\n            commentsErrMess={this.props.comments.errMess}\r\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n            postComment={this.props.postComment} />\r\n      );\r\n    };\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <TransitionGroup>\r\n            <CSSTransition key = {this.props.location.key} classNames =\"page\" timeout = {300}>\r\n              <Switch>\r\n                <Route path = \"/home\" component={HomePage}/>\r\n                <Route exact path = \"/contactus\" component={()=><Contact resetFeedbackForm = {this.props.resetFeedbackForm}\r\n                                                                         postFeedback = {this.props.postFeedback}/>}/>\r\n                <Route path='/menu/:dishId' component={DishWithId} />\r\n                <Route exact path = \"/menu\" component = {()=><Menu dishes = {this.props.dishes}/>}/>\r\n                <Route exact path = \"/aboutus\" component = {()=><About leaders = {this.props.leaders.leaders}\r\n                                                                       leadersLoading = {this.props.leaders.isLoading}\r\n                                                                       leadersErrMess = {this.props.leaders.errMess}/>}/>\r\n                <Redirect to = \"/home\"/>\r\n              </Switch>\r\n            </CSSTransition>\r\n            </TransitionGroup>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n    errMess : null, \r\n    comments : [],\r\n\r\n}, action) => {\r\n    switch (action.type) {\r\n\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload,comments:[]};\r\n    \r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments : state.comments.concat(comment)};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = { isLoading: true,\r\n    errMess: null,\r\n    promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload,promotions:[]};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n                isLoading : true,\r\n                errMess : null,\r\n                leaders : [],\r\n        }, action) => {\r\n            switch (action.type) {\r\n                case ActionTypes.ADD_LEADERS:\r\n                    return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n                case ActionTypes.LEADERS_LOADING:\r\n                    return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n                case ActionTypes.LEADERS_FAILED:\r\n                    return {...state, isLoading: false, errMess: action.payload , leaders:[]};\r\n\r\n                default:\r\n                    return state;\r\n            }\r\n};","export const InitialFeedback = {\r\n    firstname : '',\r\n    lastname : '',\r\n    telnum : '',\r\n    email : '',\r\n    agree: false,\r\n    contactType : \"Tel.\",\r\n    message : '',\r\n}"," \nimport './App.css';\nimport Main from './component/MainComponent';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nfunction App() {\n\n  return (\n    <Provider store = {store}>\n      <BrowserRouter>\n        <div className=\"App\">\n          <Main/>\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n\n}\n\nexport default App;\n","import {createStore,combineReducers,applyMiddleware} from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport {createForms} from 'react-redux-form';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () =>{\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback : InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n    return store;\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}